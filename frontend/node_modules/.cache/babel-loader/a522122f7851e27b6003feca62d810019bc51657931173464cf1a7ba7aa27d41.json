{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sinchana\\\\Inventory-Management-System\\\\frontend\\\\src\\\\components\\\\SalesChart.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\n\n// Bar chart for quantity sold per product\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SalesChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/sales').then(res => res.json()).then(data => {\n      // console.log(\"Raw Sales Data:\", data); \n\n      const grouped = data.reduce((acc, sale) => {\n        var _sale$Product;\n        const name = ((_sale$Product = sale.Product) === null || _sale$Product === void 0 ? void 0 : _sale$Product.name) || 'Unknown';\n        acc[name] = acc[name] || 0;\n        acc[name] += sale.quantity;\n        return acc;\n      }, {});\n      const chartData = Object.entries(grouped).map(([name, quantity]) => ({\n        name,\n        quantity\n      }));\n      setData(chartData);\n    }).catch(err => console.error('❌ Error loading chart data:', err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '2rem',\n      width: '100%',\n      height: '400px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" Quantity Sold by Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), data.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"quantity\",\n          fill: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n// Line chart for weekly sales summary\n_s(SalesChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = SalesChart;\nexport const SalesWeeklyChart = () => {\n  _s2();\n  const [weeklyData, setWeeklyData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/sales/weekly').then(res => res.json()).then(data => {\n      const formatted = data.map(item => ({\n        week: `W${item.week}`,\n        totalRevenue: Number(item.totalRevenue),\n        totalQuantity: Number(item.totalQuantity)\n      }));\n      setWeeklyData(formatted);\n    }).catch(err => console.error('❌ Error loading weekly sales chart:', err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '2rem',\n      width: '100%',\n      height: '400px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Weekly Sales Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), weeklyData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: weeklyData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"totalRevenue\",\n          stroke: \"#8884d8\",\n          name: \"Revenue \\u20B9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"totalQuantity\",\n          stroke: \"#82ca9d\",\n          name: \"Quantity Sold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weekly chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s2(SalesWeeklyChart, \"lyilrJfZylCcDFddN3Qy6k2QUsQ=\");\n_c2 = SalesWeeklyChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"SalesChart\");\n$RefreshReg$(_c2, \"SalesWeeklyChart\");","map":{"version":3,"names":["React","useEffect","useState","BarChart","Bar","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","SalesChart","_s","data","setData","fetch","then","res","json","grouped","reduce","acc","sale","_sale$Product","name","Product","quantity","chartData","Object","entries","map","catch","err","console","error","style","marginTop","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","length","strokeDasharray","dataKey","fill","_c","SalesWeeklyChart","_s2","weeklyData","setWeeklyData","formatted","item","week","totalRevenue","Number","totalQuantity","type","stroke","_c2","$RefreshReg$"],"sources":["C:/Users/Sinchana/Inventory-Management-System/frontend/src/components/SalesChart.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BarChart, Bar, LineChart, Line,\r\n    XAxis, YAxis, Tooltip, CartesianGrid,\r\n    ResponsiveContainer\r\n} from 'recharts';\r\n\r\n// Bar chart for quantity sold per product\r\nexport const SalesChart = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/sales')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // console.log(\"Raw Sales Data:\", data); \r\n\r\n                const grouped = data.reduce((acc, sale) => {\r\n                    const name = sale.Product?.name || 'Unknown';\r\n                    acc[name] = acc[name] || 0;\r\n                    acc[name] += sale.quantity;\r\n                    return acc;\r\n                }, {});\r\n\r\n                const chartData = Object.entries(grouped).map(([name, quantity]) => ({\r\n                    name,\r\n                    quantity\r\n                }));\r\n                setData(chartData);\r\n            })\r\n            .catch(err => console.error('❌ Error loading chart data:', err));\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ marginTop: '2rem', width: '100%', height: '400px' }}>\r\n            <h4> Quantity Sold by Product</h4>\r\n            {data.length > 0 ? (\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <BarChart data={data}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Bar dataKey=\"quantity\" fill=\"#82ca9d\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            ) : (\r\n                <p>Loading chart...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// Line chart for weekly sales summary\r\nexport const SalesWeeklyChart = () => {\r\n    const [weeklyData, setWeeklyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/sales/weekly')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const formatted = data.map(item => ({\r\n                    week: `W${item.week}`,\r\n                    totalRevenue: Number(item.totalRevenue),\r\n                    totalQuantity: Number(item.totalQuantity)\r\n                }));\r\n                setWeeklyData(formatted);\r\n            })\r\n            .catch(err => console.error('❌ Error loading weekly sales chart:', err));\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ marginTop: '2rem', width: '100%', height: '400px' }}>\r\n            <h3>Weekly Sales Overview</h3>\r\n            {weeklyData.length > 0 ? (\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <LineChart data={weeklyData}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"week\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Line type=\"monotone\" dataKey=\"totalRevenue\" stroke=\"#8884d8\" name=\"Revenue ₹\" />\r\n                        <Line type=\"monotone\" dataKey=\"totalQuantity\" stroke=\"#82ca9d\" name=\"Quantity Sold\" />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            ) : (\r\n                <p>Loading weekly chart...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}