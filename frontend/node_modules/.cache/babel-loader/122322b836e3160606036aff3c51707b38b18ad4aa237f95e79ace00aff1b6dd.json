{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sinchana\\\\Inventory-Management-System\\\\frontend\\\\src\\\\components\\\\ProductList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { toast } from 'react-toastify';\n\n// const ProductList = () => {\n//     const [products, setProducts] = useState([]);\n//     const [editingProduct, setEditingProduct] = useState(null);\n//     const [showModal, setShowModal] = useState(false);\n//     const [searchTerm, setSearchTerm] = useState('');\n\n//     useEffect(() => {\n//         fetch('http://localhost:5000/api/products')\n//             .then((res) => res.json())\n//             .then((data) => setProducts(data))\n//             .catch((err) => console.error('‚ùå Error fetching products:', err));\n//     }, []);\n//     const filteredProducts = products.filter((product) =>\n//         product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//         product.category.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n\n//     //  DELETE handler\n//     const handleDelete = async (id) => {\n//         const confirm = window.confirm(\"‚ö†Ô∏è Are you sure you want to delete this product?\");\n//         if (!confirm) return;\n\n//         try {\n//             await fetch(`http://localhost:5000/api/products/${id}`, {\n//                 method: 'DELETE',\n//             });\n//             setProducts(products.filter((p) => p.id !== id));\n//             toast.success(\"üóëÔ∏è Product deleted successfully\");\n//         } catch (err) {\n//             console.error(' Failed to delete product', err);\n//             toast.error(\" Error deleting product\");\n//         }\n//     };\n\n//     //  EDIT handler\n//     const handleEdit = (product) => {\n//         setEditingProduct(product);\n//         setShowModal(true);\n//     };\n\n//     const handleUpdate = async () => {\n//         try {\n//             const res = await fetch(`http://localhost:5000/api/products/${editingProduct.id}`, {\n//                 method: 'PUT',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify(editingProduct),\n//             });\n\n//             if (res.ok) {\n//                 const updatedList = products.map((p) =>\n//                     p.id === editingProduct.id ? editingProduct : p\n//                 );\n//                 setProducts(updatedList);\n//                 toast.success(\" Product updated\");\n//                 setShowModal(false);\n//             } else {\n//                 toast.error(\" Failed to update\");\n//             }\n//         } catch (err) {\n//             console.error(err);\n//             toast.error(\" Error updating product\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <div>\n//             </div>\n//             <h2>Search</h2>\n//             <input\n//                 type=\"text\"\n//                 placeholder=\" Search by name or category...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//                 style={{\n//                     padding: '8px',\n//                     marginBottom: '15px',\n//                     width: '300px',\n//                     borderRadius: '4px',\n//                     border: '1px solid #ccc'\n//                 }}\n//             />\n\n//             {products.length === 0 ? (\n//                 <p>No products found.</p>\n\n//             ) : (\n//                 <table className=\"min-w-full border text-sm\">\n//                     <thead className=\"bg-gray-100 text-left\">\n//                         <tr>\n//                             <th className=\"py-2 px-4 border-b\">ID</th>\n//                             <th className=\"py-2 px-4 border-b\">Name</th>\n//                             <th className=\"py-2 px-4 border-b\">Category</th>\n//                             <th className=\"py-2 px-4 border-b\">Price (‚Çπ)</th>\n//                             <th className=\"py-2 px-4 border-b\">Quantity</th>\n//                             <th className=\"py-2 px-4 border-b\">Actions</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n\n//                         {filteredProducts.map((p, index) => (\n\n//                             <tr key={p.id}>\n//                                 <td>{index + 1}</td>\n//                                 <td>{p.name}</td>\n//                                 <td>{p.category}</td>\n//                                 <td>{p.price}</td>\n//                                 <td>\n//                                     {p.quantity}{' '}\n//                                     {p.quantity < 10 && (\n//                                         <span style={{ color: 'red', marginLeft: '10px' }}>\n//                                             üîª Low Stock\n//                                         </span>\n//                                     )}\n\n//                                 </td>\n//                                 <td>\n//                                     <button onClick={() => handleEdit(p)}>‚úèÔ∏è Edit</button>\n//                                     <button onClick={() => handleDelete(p.id)} style={{ marginLeft: '10px' }}>\n//                                         üóëÔ∏è Delete\n//                                     </button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                     {showModal && (\n//                         <div style={modalStyle}>\n//                             <h3>Edit Product</h3>\n//                             <label>\n//                                 Name:\n//                                 <input\n//                                     type=\"text\"\n//                                     value={editingProduct.name}\n//                                     onChange={(e) => setEditingProduct({ ...editingProduct, name: e.target.value })}\n//                                 />\n//                             </label>\n//                             <br />\n//                             <label>\n//                                 Category:\n//                                 <input\n//                                     type=\"text\"\n//                                     value={editingProduct.category}\n//                                     onChange={(e) => setEditingProduct({ ...editingProduct, category: e.target.value })}\n//                                 />\n//                             </label>\n//                             <br />\n//                             <label>\n//                                 Price:\n//                                 <input\n//                                     type=\"number\"\n//                                     value={editingProduct.price}\n//                                     onChange={(e) => setEditingProduct({ ...editingProduct, price: e.target.value })}\n//                                 />\n//                             </label>\n//                             <br />\n//                             <label>\n//                                 Quantity:\n//                                 <input\n//                                     type=\"number\"\n//                                     value={editingProduct.quantity}\n//                                     onChange={(e) => setEditingProduct({ ...editingProduct, quantity: e.target.value })}\n//                                 />\n//                             </label>\n//                             <br /><br />\n//                             <button onClick={handleUpdate}> Save</button>\n//                             <button onClick={() => setShowModal(false)} style={{ marginLeft: '10px' }}>‚ùå Cancel</button>\n//                         </div>\n//                     )}\n\n//                 </table>\n\n//             )}\n//         </div>\n//     );\n// };\n\n// const modalStyle = {\n//     position: 'fixed',\n//     top: '20%',\n//     left: '35%',\n//     backgroundColor: '#fff',\n//     padding: '20px',\n//     border: '2px solid #000',\n//     borderRadius: '8px',\n//     zIndex: 9999,\n//     boxShadow: '0 0 10px rgba(0,0,0,0.3)',\n// };\n\n// export default ProductList;\n\n// ProductList.jsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [categoryFilter, setCategoryFilter] = useState('');\n  const [sortBy, setSortBy] = useState('');\n  const [sortAsc, setSortAsc] = useState(true);\n  const [editingProduct, setEditingProduct] = useState(null);\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/products');\n      setProducts(res.data);\n    } catch (err) {\n      toast.error(\"Failed to fetch products\");\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm(\"Are you sure to delete this product?\")) return;\n    try {\n      await axios.delete(`http://localhost:5000/api/products/${id}`);\n      setProducts(products.filter(p => p.id !== id));\n      toast.success(\"Product deleted successfully\");\n    } catch (err) {\n      toast.error(\"Error deleting product\");\n    }\n  };\n  const handleEditSubmit = async e => {\n    e.preventDefault();\n    const {\n      id,\n      name,\n      category,\n      price,\n      quantity\n    } = editingProduct;\n    try {\n      await axios.put(`http://localhost:5000/api/products/${id}`, {\n        name,\n        category,\n        price,\n        quantity\n      });\n      toast.success(\"Product updated\");\n      setEditingProduct(null);\n      fetchProducts();\n    } catch (err) {\n      toast.error(\"Update failed\");\n    }\n  };\n  const toggleSort = field => {\n    if (sortBy === field) setSortAsc(!sortAsc);else {\n      setSortBy(field);\n      setSortAsc(true);\n    }\n  };\n  const filtered = products.filter(p => p.name.toLowerCase().includes(searchTerm.toLowerCase()) && (categoryFilter === '' || p.category === categoryFilter));\n  const sorted = [...filtered].sort((a, b) => {\n    if (!sortBy) return 0;\n    return sortAsc ? a[sortBy] > b[sortBy] ? 1 : -1 : a[sortBy] < b[sortBy] ? 1 : -1;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by name\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"border rounded p-2 w-1/3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: categoryFilter,\n        onChange: e => setCategoryFilter(e.target.value),\n        className: \"border rounded p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), [...new Set(products.map(p => p.category))].map((cat, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat,\n          children: cat\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this), editingProduct && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEditSubmit,\n      className: \"mb-6 p-4 border rounded bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: editingProduct.name,\n        onChange: e => setEditingProduct({\n          ...editingProduct,\n          name: e.target.value\n        }),\n        className: \"border p-2 rounded w-full mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Category\",\n        value: editingProduct.category,\n        onChange: e => setEditingProduct({\n          ...editingProduct,\n          category: e.target.value\n        }),\n        className: \"border p-2 rounded w-full mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Price\",\n        value: editingProduct.price,\n        onChange: e => setEditingProduct({\n          ...editingProduct,\n          price: e.target.value\n        }),\n        className: \"border p-2 rounded w-full mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Quantity\",\n        value: editingProduct.quantity,\n        onChange: e => setEditingProduct({\n          ...editingProduct,\n          quantity: e.target.value\n        }),\n        className: \"border p-2 rounded w-full mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-green-600 text-white px-4 py-2 rounded mr-2\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditingProduct(null),\n        className: \"bg-gray-500 text-white px-4 py-2 rounded\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"w-full table-auto border\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2 cursor-pointer\",\n            onClick: () => toggleSort('name'),\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2 cursor-pointer\",\n            onClick: () => toggleSort('category'),\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2 cursor-pointer\",\n            onClick: () => toggleSort('price'),\n            children: \"Price (\\u20B9)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2 cursor-pointer\",\n            onClick: () => toggleSort('quantity'),\n            children: \"Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sorted.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"6\",\n            className: \"text-center p-4 text-gray-500\",\n            children: \"No products found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }, this) : sorted.map((p, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"text-center border-t\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2\",\n            children: p.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2\",\n            children: p.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2\",\n            children: [\"\\u20B9\", p.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2\",\n            children: [p.quantity, \" \", p.quantity < 5 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 ml-1\",\n              children: \"\\uD83D\\uDD3B Low Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 69\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600\",\n              onClick: () => setEditingProduct(p),\n              children: \"\\u270F\\uFE0F Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-red-500 text-white px-2 py-1 ml-2 rounded hover:bg-red-600\",\n              onClick: () => handleDelete(p.id),\n              children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 33\n          }, this)]\n        }, p.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductList, \"wKehKTUwvAZKSqrS6fdUPFeeWDw=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","axios","toast","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","searchTerm","setSearchTerm","categoryFilter","setCategoryFilter","sortBy","setSortBy","sortAsc","setSortAsc","editingProduct","setEditingProduct","fetchProducts","res","get","data","err","error","handleDelete","id","window","confirm","delete","filter","p","success","handleEditSubmit","e","preventDefault","name","category","price","quantity","put","toggleSort","field","filtered","toLowerCase","includes","sorted","sort","a","b","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","Set","map","cat","i","onSubmit","onClick","length","colSpan","index","_c","$RefreshReg$"],"sources":["C:/Users/Sinchana/Inventory-Management-System/frontend/src/components/ProductList.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { toast } from 'react-toastify';\r\n\r\n// const ProductList = () => {\r\n//     const [products, setProducts] = useState([]);\r\n//     const [editingProduct, setEditingProduct] = useState(null);\r\n//     const [showModal, setShowModal] = useState(false);\r\n//     const [searchTerm, setSearchTerm] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         fetch('http://localhost:5000/api/products')\r\n//             .then((res) => res.json())\r\n//             .then((data) => setProducts(data))\r\n//             .catch((err) => console.error('‚ùå Error fetching products:', err));\r\n//     }, []);\r\n//     const filteredProducts = products.filter((product) =>\r\n//         product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//         product.category.toLowerCase().includes(searchTerm.toLowerCase())\r\n//     );\r\n\r\n//     //  DELETE handler\r\n//     const handleDelete = async (id) => {\r\n//         const confirm = window.confirm(\"‚ö†Ô∏è Are you sure you want to delete this product?\");\r\n//         if (!confirm) return;\r\n\r\n//         try {\r\n//             await fetch(`http://localhost:5000/api/products/${id}`, {\r\n//                 method: 'DELETE',\r\n//             });\r\n//             setProducts(products.filter((p) => p.id !== id));\r\n//             toast.success(\"üóëÔ∏è Product deleted successfully\");\r\n//         } catch (err) {\r\n//             console.error(' Failed to delete product', err);\r\n//             toast.error(\" Error deleting product\");\r\n//         }\r\n//     };\r\n\r\n\r\n//     //  EDIT handler\r\n//     const handleEdit = (product) => {\r\n//         setEditingProduct(product);\r\n//         setShowModal(true);\r\n//     };\r\n\r\n//     const handleUpdate = async () => {\r\n//         try {\r\n//             const res = await fetch(`http://localhost:5000/api/products/${editingProduct.id}`, {\r\n//                 method: 'PUT',\r\n//                 headers: { 'Content-Type': 'application/json' },\r\n//                 body: JSON.stringify(editingProduct),\r\n//             });\r\n\r\n//             if (res.ok) {\r\n//                 const updatedList = products.map((p) =>\r\n//                     p.id === editingProduct.id ? editingProduct : p\r\n//                 );\r\n//                 setProducts(updatedList);\r\n//                 toast.success(\" Product updated\");\r\n//                 setShowModal(false);\r\n//             } else {\r\n//                 toast.error(\" Failed to update\");\r\n//             }\r\n//         } catch (err) {\r\n//             console.error(err);\r\n//             toast.error(\" Error updating product\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <div>\r\n//             </div>\r\n//             <h2>Search</h2>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 placeholder=\" Search by name or category...\"\r\n//                 value={searchTerm}\r\n//                 onChange={(e) => setSearchTerm(e.target.value)}\r\n//                 style={{\r\n//                     padding: '8px',\r\n//                     marginBottom: '15px',\r\n//                     width: '300px',\r\n//                     borderRadius: '4px',\r\n//                     border: '1px solid #ccc'\r\n//                 }}\r\n//             />\r\n\r\n//             {products.length === 0 ? (\r\n//                 <p>No products found.</p>\r\n\r\n//             ) : (\r\n//                 <table className=\"min-w-full border text-sm\">\r\n//                     <thead className=\"bg-gray-100 text-left\">\r\n//                         <tr>\r\n//                             <th className=\"py-2 px-4 border-b\">ID</th>\r\n//                             <th className=\"py-2 px-4 border-b\">Name</th>\r\n//                             <th className=\"py-2 px-4 border-b\">Category</th>\r\n//                             <th className=\"py-2 px-4 border-b\">Price (‚Çπ)</th>\r\n//                             <th className=\"py-2 px-4 border-b\">Quantity</th>\r\n//                             <th className=\"py-2 px-4 border-b\">Actions</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n\r\n//                         {filteredProducts.map((p, index) => (\r\n\r\n//                             <tr key={p.id}>\r\n//                                 <td>{index + 1}</td>\r\n//                                 <td>{p.name}</td>\r\n//                                 <td>{p.category}</td>\r\n//                                 <td>{p.price}</td>\r\n//                                 <td>\r\n//                                     {p.quantity}{' '}\r\n//                                     {p.quantity < 10 && (\r\n//                                         <span style={{ color: 'red', marginLeft: '10px' }}>\r\n//                                             üîª Low Stock\r\n//                                         </span>\r\n//                                     )}\r\n\r\n\r\n//                                 </td>\r\n//                                 <td>\r\n//                                     <button onClick={() => handleEdit(p)}>‚úèÔ∏è Edit</button>\r\n//                                     <button onClick={() => handleDelete(p.id)} style={{ marginLeft: '10px' }}>\r\n//                                         üóëÔ∏è Delete\r\n//                                     </button>\r\n//                                 </td>\r\n//                             </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                     {showModal && (\r\n//                         <div style={modalStyle}>\r\n//                             <h3>Edit Product</h3>\r\n//                             <label>\r\n//                                 Name:\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     value={editingProduct.name}\r\n//                                     onChange={(e) => setEditingProduct({ ...editingProduct, name: e.target.value })}\r\n//                                 />\r\n//                             </label>\r\n//                             <br />\r\n//                             <label>\r\n//                                 Category:\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     value={editingProduct.category}\r\n//                                     onChange={(e) => setEditingProduct({ ...editingProduct, category: e.target.value })}\r\n//                                 />\r\n//                             </label>\r\n//                             <br />\r\n//                             <label>\r\n//                                 Price:\r\n//                                 <input\r\n//                                     type=\"number\"\r\n//                                     value={editingProduct.price}\r\n//                                     onChange={(e) => setEditingProduct({ ...editingProduct, price: e.target.value })}\r\n//                                 />\r\n//                             </label>\r\n//                             <br />\r\n//                             <label>\r\n//                                 Quantity:\r\n//                                 <input\r\n//                                     type=\"number\"\r\n//                                     value={editingProduct.quantity}\r\n//                                     onChange={(e) => setEditingProduct({ ...editingProduct, quantity: e.target.value })}\r\n//                                 />\r\n//                             </label>\r\n//                             <br /><br />\r\n//                             <button onClick={handleUpdate}> Save</button>\r\n//                             <button onClick={() => setShowModal(false)} style={{ marginLeft: '10px' }}>‚ùå Cancel</button>\r\n//                         </div>\r\n//                     )}\r\n\r\n//                 </table>\r\n\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// const modalStyle = {\r\n//     position: 'fixed',\r\n//     top: '20%',\r\n//     left: '35%',\r\n//     backgroundColor: '#fff',\r\n//     padding: '20px',\r\n//     border: '2px solid #000',\r\n//     borderRadius: '8px',\r\n//     zIndex: 9999,\r\n//     boxShadow: '0 0 10px rgba(0,0,0,0.3)',\r\n// };\r\n\r\n\r\n// export default ProductList;\r\n\r\n\r\n// ProductList.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ProductList = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [categoryFilter, setCategoryFilter] = useState('');\r\n    const [sortBy, setSortBy] = useState('');\r\n    const [sortAsc, setSortAsc] = useState(true);\r\n    const [editingProduct, setEditingProduct] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            const res = await axios.get('http://localhost:5000/api/products');\r\n            setProducts(res.data);\r\n        } catch (err) {\r\n            toast.error(\"Failed to fetch products\");\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        if (!window.confirm(\"Are you sure to delete this product?\")) return;\r\n\r\n        try {\r\n            await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n            setProducts(products.filter(p => p.id !== id));\r\n            toast.success(\"Product deleted successfully\");\r\n        } catch (err) {\r\n            toast.error(\"Error deleting product\");\r\n        }\r\n    };\r\n\r\n    const handleEditSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { id, name, category, price, quantity } = editingProduct;\r\n        try {\r\n            await axios.put(`http://localhost:5000/api/products/${id}`, { name, category, price, quantity });\r\n            toast.success(\"Product updated\");\r\n            setEditingProduct(null);\r\n            fetchProducts();\r\n        } catch (err) {\r\n            toast.error(\"Update failed\");\r\n        }\r\n    };\r\n\r\n    const toggleSort = (field) => {\r\n        if (sortBy === field) setSortAsc(!sortAsc);\r\n        else {\r\n            setSortBy(field);\r\n            setSortAsc(true);\r\n        }\r\n    };\r\n\r\n    const filtered = products.filter(p =>\r\n        p.name.toLowerCase().includes(searchTerm.toLowerCase()) &&\r\n        (categoryFilter === '' || p.category === categoryFilter)\r\n    );\r\n\r\n    const sorted = [...filtered].sort((a, b) => {\r\n        if (!sortBy) return 0;\r\n        return sortAsc\r\n            ? a[sortBy] > b[sortBy] ? 1 : -1\r\n            : a[sortBy] < b[sortBy] ? 1 : -1;\r\n    });\r\n\r\n    return (\r\n        <div className=\"container mt-8\">\r\n            <div className=\"flex items-center space-x-4 mb-4\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search by name\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"border rounded p-2 w-1/3\"\r\n                />\r\n                <select\r\n                    value={categoryFilter}\r\n                    onChange={(e) => setCategoryFilter(e.target.value)}\r\n                    className=\"border rounded p-2\"\r\n                >\r\n                    <option value=\"\">All Categories</option>\r\n                    {[...new Set(products.map(p => p.category))].map((cat, i) => (\r\n                        <option key={i} value={cat}>{cat}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {editingProduct && (\r\n                <form onSubmit={handleEditSubmit} className=\"mb-6 p-4 border rounded bg-gray-100\">\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Edit Product</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        value={editingProduct.name}\r\n                        onChange={(e) => setEditingProduct({ ...editingProduct, name: e.target.value })}\r\n                        className=\"border p-2 rounded w-full mb-2\"\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Category\"\r\n                        value={editingProduct.category}\r\n                        onChange={(e) => setEditingProduct({ ...editingProduct, category: e.target.value })}\r\n                        className=\"border p-2 rounded w-full mb-2\"\r\n                    />\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Price\"\r\n                        value={editingProduct.price}\r\n                        onChange={(e) => setEditingProduct({ ...editingProduct, price: e.target.value })}\r\n                        className=\"border p-2 rounded w-full mb-2\"\r\n                    />\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Quantity\"\r\n                        value={editingProduct.quantity}\r\n                        onChange={(e) => setEditingProduct({ ...editingProduct, quantity: e.target.value })}\r\n                        className=\"border p-2 rounded w-full mb-2\"\r\n                    />\r\n                    <button type=\"submit\" className=\"bg-green-600 text-white px-4 py-2 rounded mr-2\">Update</button>\r\n                    <button onClick={() => setEditingProduct(null)} className=\"bg-gray-500 text-white px-4 py-2 rounded\">Cancel</button>\r\n                </form>\r\n            )}\r\n\r\n            <table className=\"w-full table-auto border\">\r\n                <thead>\r\n                    <tr className=\"bg-gray-200\">\r\n                        <th className=\"p-2\">#</th>\r\n                        <th className=\"p-2 cursor-pointer\" onClick={() => toggleSort('name')}>Name</th>\r\n                        <th className=\"p-2 cursor-pointer\" onClick={() => toggleSort('category')}>Category</th>\r\n                        <th className=\"p-2 cursor-pointer\" onClick={() => toggleSort('price')}>Price (‚Çπ)</th>\r\n                        <th className=\"p-2 cursor-pointer\" onClick={() => toggleSort('quantity')}>Stock</th>\r\n                        <th className=\"p-2\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {sorted.length === 0 ? (\r\n                        <tr><td colSpan=\"6\" className=\"text-center p-4 text-gray-500\">No products found</td></tr>\r\n                    ) : (\r\n                        sorted.map((p, index) => (\r\n                            <tr key={p.id} className=\"text-center border-t\">\r\n                                <td className=\"p-2\">{index + 1}</td>\r\n                                <td className=\"p-2\">{p.name}</td>\r\n                                <td className=\"p-2\">{p.category}</td>\r\n                                <td className=\"p-2\">‚Çπ{p.price}</td>\r\n                                <td className=\"p-2\">\r\n                                    {p.quantity} {p.quantity < 5 && <span className=\"text-red-500 ml-1\">üîª Low Stock</span>}\r\n                                </td>\r\n                                <td className=\"p-2\">\r\n                                    <button\r\n                                        className=\"bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600\"\r\n                                        onClick={() => setEditingProduct(p)}\r\n                                    >‚úèÔ∏è Edit</button>\r\n                                    <button\r\n                                        className=\"bg-red-500 text-white px-2 py-1 ml-2 rounded hover:bg-red-600\"\r\n                                        onClick={() => handleDelete(p.id)}\r\n                                    >üóëÔ∏è Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductList;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}