{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sinchana\\\\Inventory-Management-System\\\\frontend\\\\src\\\\components\\\\RecordSaleForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecordSaleForm = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [productId, setProductId] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [date, setDate] = useState('');\n  useEffect(() => {\n    // Fetch products for dropdown\n    fetch('http://localhost:5000/api/products').then(res => res.json()).then(data => setProducts(data));\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const saleData = {\n      productId: Number(productId),\n      quantity: Number(quantity),\n      date\n    };\n    console.log(\"Sending sale data:\", saleData);\n    try {\n      const response = await fetch('http://localhost:5000/api/sales', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(saleData)\n      });\n      if (response.ok) {\n        toast.success(\" Sale recorded\");\n        setProductId('');\n        setQuantity('');\n        setDate('');\n      } else {\n        toast.error(\" Failed to record sale\");\n      }\n    } catch (err) {\n      console.error(err);\n      toast.error(\" Error recording sale\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginTop: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Record Sale\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: productId,\n      onChange: e => setProductId(e.target.value),\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select Product --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), products.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: p.id,\n        children: p.name\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Quantity\",\n      value: quantity,\n      onChange: e => setQuantity(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(RecordSaleForm, \"H9Xi09e5XrPTbDvEtngpKtGpJg4=\");\n_c = RecordSaleForm;\nexport default RecordSaleForm;\nvar _c;\n$RefreshReg$(_c, \"RecordSaleForm\");","map":{"version":3,"names":["React","useState","useEffect","toast","jsxDEV","_jsxDEV","RecordSaleForm","_s","products","setProducts","productId","setProductId","quantity","setQuantity","date","setDate","fetch","then","res","json","data","handleSubmit","e","preventDefault","saleData","Number","console","log","response","method","headers","body","JSON","stringify","ok","success","error","err","onSubmit","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","required","map","p","id","name","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Sinchana/Inventory-Management-System/frontend/src/components/RecordSaleForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst RecordSaleForm = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [productId, setProductId] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [date, setDate] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Fetch products for dropdown\r\n        fetch('http://localhost:5000/api/products')\r\n            .then((res) => res.json())\r\n            .then((data) => setProducts(data));\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const saleData = {\r\n            productId: Number(productId),\r\n            quantity: Number(quantity),\r\n            date\r\n        };\r\n        console.log(\"Sending sale data:\", saleData);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/sales', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(saleData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                toast.success(\" Sale recorded\");\r\n                setProductId('');\r\n                setQuantity('');\r\n                setDate('');\r\n            }\r\n            else {\r\n                toast.error(\" Failed to record sale\");\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n            toast.error(\" Error recording sale\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} style={{ marginTop: '2rem' }}>\r\n            <h3> Record Sale</h3>\r\n            <select value={productId} onChange={(e) => setProductId(e.target.value)} required>\r\n                <option value=\"\">-- Select Product --</option>\r\n                {products.map((p) => (\r\n                    <option key={p.id} value={p.id}>{p.name}</option>\r\n                ))}\r\n            </select>{' '}\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Quantity\"\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(e.target.value)}\r\n                required\r\n            />{' '}\r\n            <input\r\n                type=\"date\"\r\n                value={date}\r\n                onChange={(e) => setDate(e.target.value)}\r\n            />{' '}\r\n            <button type=\"submit\">Record</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RecordSaleForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}